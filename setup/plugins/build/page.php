<?php
$menuArray = json_decode(file_get_contents("$webroot/resources/json/navigation.json"), true)['links'];
$menuHTML = file_get_contents("$webroot/resources/parts/navigation.html");
$navigation = [];

$filesList = glob("$webroot/resources/parts/pages/*.html");
foreach ($filesList as $file) {
    $pagesArray[] = "/" . str_replace(".html", "", basename($file));
}

foreach ($menuArray as $key => $menuHref) {
    $navigationArray[] = ($menuHref == "/") ? "/home" : $menuHref;
}

foreach ($filesList as $file) {
    $folder = "/" . str_replace(".html", "", basename($file));
    if (in_array($folder, $navigationArray)) {
        $doc = new DOMDocument('1.0', "UTF-8");
        libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
        $doc->loadHTML($menuHTML);
        libxml_clear_errors();
        $templateLiActive = $doc->getElementById('templateActive');
        $templateLi = $doc->getElementById('template');
        $menuItemsUl = $doc->getElementById('menuItems');
        foreach ($menuArray as $title => $href) {
            $tmp = ($href == "/") ? "/home" : $href;

            if ($folder == $tmp) {
                $newLi = $templateLiActive->cloneNode(true);
            } else {
                $newLi = $templateLi->cloneNode(true);
            }
            $link = $newLi->getElementsByTagName('a')->item(0);
            $link->setAttribute('href', $href);
            $link->nodeValue = $title;
            $menuItemsUl->appendChild($newLi);
        }
        $menuItemsUl->removeChild($templateLiActive);
        $menuItemsUl->removeChild($templateLi);
        $navigation[$folder] = $doc->saveHTML();
    }
}

$footerHtml = file_get_contents("$webroot/resources/parts/footer.html");

$htmlTemplate = file_get_contents("$webroot/setup/index/template.html");
foreach ($filesList as $file) {
    $folder = "/" . str_replace(".html", "", basename($file));
    $href = ($folder == "/") ? "/home" : $folder;

    $htmlPage = file_get_contents($file);

    $doc = new DOMDocument('1.0', "UTF-8");
    libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
    $doc->loadHTML($htmlTemplate, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
    libxml_clear_errors();
    $main = $doc->getElementById('content');
    $header = $doc->getElementById('navigation');
    $footer = $doc->getElementById('footer');

    $part = new DOMDocument('1.0', "UTF-8");
    libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
    $part->loadHTML("<?xml encoding=\"UTF-8\"><main>" . $htmlPage . "</main>", LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
    libxml_clear_errors();
    $content = $part->getElementsByTagName('main')->item(0);
    if ($content) {
        $fragment = $doc->createDocumentFragment();
        $fragment->appendChild($doc->importNode($content, true));
        $main->parentNode->replaceChild($fragment, $main);
    }

    if (isset($navigation[$href])) {
        $nav = new DOMDocument('1.0', "UTF-8");
        libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
        $nav->loadHTML("<?xml encoding=\"UTF-8\"><header>" . $navigation[$href] . "</header>");
        libxml_clear_errors();
        $nav_content = $nav->getElementsByTagName('header')->item(0);
        if ($nav_content) {
            $fragment = $doc->createDocumentFragment();
            $fragment->appendChild($doc->importNode($nav_content, true));
            $header->parentNode->replaceChild($fragment, $header);
        }
    }

    $foot = new DOMDocument('1.0', "UTF-8");
    libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
    $foot->loadHTML("<?xml encoding=\"UTF-8\"><footer>" . $footerHtml . "</footer>");
    libxml_clear_errors();
    $foot_content = $foot->getElementsByTagName('footer')->item(0);
    if ($foot_content) {
        $fragment = $doc->createDocumentFragment();
        $fragment->appendChild($doc->importNode($foot_content, true));
        $footer->parentNode->replaceChild($fragment, $footer);
    }
    file_put_contents("$webroot$folder/index.html", $doc->saveHTML() . "<!--Generated by WebMakerOne-->");
}


$hostname = $_SERVER['HTTP_HOST'];
foreach ($pagesArray as $href) {
    $htmlPages = file_get_contents("$webroot$href/index.html");
    $realHref = ($href == "/home") ? "/" : $href;
    $doc = new DOMDocument('1.0', "UTF-8");
    $doc->formatOutput = true;
    libxml_use_internal_errors(true); // Suppress warnings due to malformed HTML
    $doc->loadHTML($htmlPages, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
    libxml_clear_errors();
    $body = $doc->getElementsByTagName('main')->item(0);
    $head = $doc->getElementsByTagName('head')->item(0);

    $sections = $body->getElementsByTagName(qualifiedName: 'section');

    // Build JSONLD Breadcrumbs
    $t = 1;
    $jsonLd = [
        "@context" => "https://schema.org",
        "@type" => "BreadcrumbList",
        "itemListElement" => [
            [
                "@type" => "ListItem",
                "position" => $t,
                "name" => ucwords(str_replace("/", "", $href)),
                "item" => "https://$hostname/"
            ]
        ]
    ];
    $allHeadings = "";
    foreach ($sections as $index => $section) {
        $t++;
        if (empty($section->getAttribute('id'))) {
            $section->setAttribute('id', "id$index");
        }
        $url = (($realHref == "/") ? "" : $realHref) . "/#" . $section->getAttribute('id');
        $foundH = false;
        $theHeading = "Section";
        for ($i = 1; $i <= 6; $i++) {
            $headings = $section->getElementsByTagName('h' . $i);
            foreach ($headings as $heading) {
                if (!$foundH) {
                    $foundH = true;
                    $theHeading = $heading->nodeValue;
                    $allHeadings .= "$heading->nodeValue, ";
                }
            }
        }
        $jsonLd['itemListElement'][] = [
            "@type" => "ListItem",
            "position" => $t,
            "name" => $theHeading,
            "item" => "https://$hostname$url"
        ];
    }

    $head = $doc->getElementsByTagName('head')->item(0);

    $r = 0;
    $a[$r] = $doc->createElement('script');
    $a[$r]->setAttribute('type', 'application/ld+json');
    $a[$r]->textContent = json_encode($jsonLd, JSON_PRETTY_PRINT);

    $r++;
    $a[$r] = $doc->createElement('script');
    $a[$r]->setAttribute('type', 'application/ld+json');
    $a[$r]->textContent = file_get_contents("$webroot/resources/json/business.json");

    $r++;
    $a[$r] = $doc->createElement('title');
    $a[$r]->textContent = $theHeading;

    $r++;
    $a[$r] = $doc->createElement('meta');
    $a[$r]->setAttribute('name', 'description');
    $a[$r]->setAttribute('content', $allHeadings);

    $r++;
    $a[$r] = $doc->createElement('meta');
    $a[$r]->setAttribute('rel', 'canonical');
    $a[$r]->setAttribute('href', "https://$hostname" . (($realHref == "/") ? "" : $realHref) . "/");

    $r++;
    $a[$r] = $doc->createElement('link');
    $a[$r]->setAttribute('rel', 'icon');
    $a[$r]->setAttribute('href', '/uploads/favicon.png');
    $a[$r]->setAttribute('type', 'image/x-icon');

    foreach ($a as $element) {
        $head->appendChild($element);
    }
    file_put_contents("$webroot$href/index.html", $doc->saveHTML() . "\n<!--JSON LD-->\n<!---->");
}


file_put_contents("$webroot/index.html", file_get_contents("$webroot/home/index.html"));


file_put_contents("$webroot/setup/plugins/build/build.txt", date("Y-m-d H:i:s"));
header("location: /setup");